{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/cards.jsx","api/index.js","Components/Chart/Charts.jsx","Components/Country/Countrypicker.jsx","App.js","index.js","App.module.css","Components/Chart/Charts.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varient","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchcountries","countries","name","Charts","useState","DailyData","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countrypicker","handleCountryChange","fetchedCountries","setfetchedCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","App","state","fetchedData","setState","this","image","src","coronaimage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.775bee0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1ecmr\",\"card\":\"Cards_card__1UmEW\",\"infected\":\"Cards_infected__3tp8Y\",\"recovered\":\"Cards_recovered__3Cw9A\",\"deaths\":\"Cards_deaths__Ew6R_\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames';\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return \"loading...\";\r\n    }\r\n    return(\r\n        <div className ={styles.container}>\r\n            <Grid container spacing ={3} justify=\"center\">\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography varient=\"h5\">\r\n                            <CountUp start ={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varient=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recoverd</Typography>\r\n                        <Typography varient=\"h5\"><CountUp start ={0} end={recovered.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varient=\"body2\">Number of COVID-19 cases Recoved</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography varient=\"h5\"><CountUp start ={0} end={deaths.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varient=\"body2\">Number of deaths due to COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from \"axios\"\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nexport const fetchData = async(country) => {\r\n    let changeableurl = url;\r\n    if(country){\r\n        changeableurl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data: {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableurl);\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        }    \r\n    }catch(error){\r\n    }\r\n}\r\nexport const fetchDailyData = async() =>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n        \r\n        return modifiedData;\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}\r\nexport const fetchcountries = async() =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name);\r\n       \r\n\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\nconst Charts = ({data:{confirmed, recovered, deaths},country }) => {\r\n    const [DailyData , setDailyData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n    const lineChart =(\r\n        DailyData[0]\r\n        ?(\r\n        <Line \r\n        data = {{\r\n            labels:DailyData.map(({date})=>date),\r\n            datasets: [{\r\n                data: DailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n\r\n            }, {\r\n                \r\n                data: DailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n            }],\r\n        }}\r\n        />):null\r\n    );\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n            data ={{\r\n                labels:['infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label:'people',\r\n                     backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                     data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display: true,text:`current state in ${country}`}\r\n            }}\r\n            />\r\n        ):null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Charts;","import React,{useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport {fetchcountries} from '../../api';\r\nimport styles from './Countrypicker.module.css'\r\nconst Countrypicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setfetchedCountries] = useState([]);\r\n    useEffect(()=> {\r\n        const fetchAPI = async() =>{\r\n            setfetchedCountries(await fetchcountries());\r\n        }\r\n        fetchAPI();\r\n    },[setfetchedCountries]);\r\n    console.log(fetchedCountries);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country) => <option key value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        \r\n    )\r\n}\r\nexport default Countrypicker;","\nimport React from 'react';\nimport {Cards,Charts,Countrypicker} from './Components'\nimport styles from \"./App.module.css\";\nimport {fetchData} from './api/index';\nimport coronaimage from './images/image.png';\nclass App extends React.Component {\n  state = {\n    data:{},\n    country: '',\n  }\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData});\n  }\n  handleCountryChange = async(country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data: fetchedData, country: country});\n  }\n    render() {\n      const {data,country} = this.state;\n        return(\n            <div className={styles.container}>\n              <img className={styles.image} src={coronaimage}/>\n                    <Cards data={data}/>\n                    <Countrypicker handleCountryChange={this.handleCountryChange}/>\n                    <Charts data={data} country={country}/>\n            </div>\n        )\n    }\n}\nexport default  App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1DQHg\",\"image\":\"App_image__3hm47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__Q0LMS\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}